# viモードへ切り替え
set -o vi
export EDITOR='vim'

# Mac時の設定
if [ `uname` = "Darwin" ]; then
    alias vim='/Applications/MacVim.app/Contents/MacOS/Vim'
    alias vi='vim'
    alias gvim='/Applications/MacVim.app/Contents/MacOS/mvim --remote-tab-silent'
    export PATH=$HOME/bin:$HOME/usr/local/bin:/usr/local/sbin:/Applications/MacVim.app/Contents/MacOS:/Users/npoi/Library/Android/sdk/platform-tools:/usr/local/bin:$PATH
    export SUDO_EDITOR='/Applications/MacVim.app/Contents/MacOS/Vim'
    export SUDO_EDITOR=vim

    alias pwgen12='pwgen -sy 12 1'
    alias pwgen32='pwgen -sy 32 1'

    alias ctags='/usr/local/Cellar/ctags/5.8/bin/ctags'
    if [ -f `brew --prefix`/etc/bash_completion ]; then
        . `brew --prefix`/etc/bash_completion
    fi
fi

[[ -e "/usr/local/bin/aws_completer" ]] && complete -C '/usr/local/bin/aws_completer' aws

alias ls='ls -F -G'
alias ll='ls -l'

alias calendar='vim -c Calendar'


# 
# git
#
if [ -e "/usr/local/etc/bash_completion.d/git-completion.bash" ]; then
    source /usr/local/etc/bash_completion.d/git-completion.bash
elif [ -e "/Library/Developer/CommandLineTools/usr/share/git-core/git-completion.bash" ]; then
    source /Library/Developer/CommandLineTools/usr/share/git-core/git-completion.bash
fi

if [ -e "/usr/local/etc/bash_completion.d/git-prompt.sh" ]; then
    source /usr/local/etc/bash_completion.d/git-prompt.sh
elif [ -e "/Library/Developer/CommandLineTools/usr/share/git-core/git-prompt.sh" ]; then
    source /Library/Developer/CommandLineTools/usr/share/git-core/git-prompt.sh
fi
# PS1="\[\e[40m\e[0;40m\][\h@\w]\[\e[0m\]\n\D{%Y/%m/%d} \t\$(__git_ps1) \$ "
PS1="\
    \[\e[37m\]\t>\[\e[00m\] \
    \[\e[1;35m\]\h\[\e[00m\] \
    [\[\e[1;4;33m\]\w\[\e[00m\]]\n\
    \`
if [ \$? = 0 ]; then
      echo \[\e[1\;32m\];
  else
        echo \[\e[1\;31m\];
    fi
    \`\
        \u $ \[\e[00m\]"

# rsync
alias ssync='rsync --rsync-path='\''sudo rsync'\'' -e '\''ssh -t'\'

# sudoedit コマンドがなければ設定
SUDOEDIT_PATH=`which sudoedit`
[[ -z $SUDOEDIT_PATH ]] && alias sudoedit='sudo -e'
[[ -e "~/.alias.ssh" ]] && source ~/.alias.ssh

eval `ssh-agent` > /dev/null 2>&1

#
# python
#
export PYTHONSTARTUP=~/.pythonrc
#export PYTHONPATH=/usr/local/lib/python2.7/site-packages

# virtualenv
export WORKON_HOME=$HOME/.virtualenvs
export VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python

[[ -s `which virtualenvwrapper.sh` ]] && source `which virtualenvwrapper.sh`

# pythonz
[[ -s $HOME/.pythonz/etc/bashrc ]] && source $HOME/.pythonz/etc/bashrc

#
# ruby
# 

# rbenv
export PATH="$HOME/.rbenv/bin:$PATH"
[[ -s `which rbenv` ]] && eval "$(rbenv init -)"
alias be='rbenv exec bundle exec'
alias buni='rbenv exec bundle install --path vendor/bundler'


#
# golang
#
export GOPATH=~/usr/local/


# ヒストリーの数
HISTSIZE=50000

cdd() {
    command cd "$@"
    local s=$?
    if [[ ($s -eq 0) && (${#FUNCNAME[*]} -eq 1) ]]; then
        history -s cd $(printf "%q" "$PWD")
    fi
    return $s
}

source ~/npoi_dotfiles/fabric-completion.bash

function share_history {
  history -a
  history -c
  history -r
}
PROMPT_COMMAND='share_history'
shopt -u histappend

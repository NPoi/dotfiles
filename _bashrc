#
# Shell基本設定
#
set -o vi  # viモードへ切り替え
export LC_LANG=ja_JP.UTF-8  # 言語設定
export EDITOR='vim'  # デフォルトエディタをvimに

[[ -e $HOME/.aliases ]] && source $HOME/.aliases  # alias用の外部ファイルがあれば読み込み
HISTSIZE=500000  # ヒストリーの数

cdd() {
    command cd "$@"
    local s=$?
    if [[ ($s -eq 0) && (${#FUNCNAME[*]} -eq 1) ]]; then
        history -s cd $(printf "%q" "$PWD")
    fi
    return $s
}

function hispecory {
    
    sh --rcfile ~/.bashrc -c "$(cat ~/.bash_history | LC_ALL=C sort | uniq |  peco)"
}    


function share_history {
    history -a
    history -c
    history -r
}
PROMPT_COMMAND='share_history'
shopt -u histappend

# prompt
PS1="\
    \[\e[37m\]\t>\[\e[00m\] \
    \[\e[1;35m\]\h\[\e[00m\] \
    [\[\e[1;4;33m\]\w\[\e[00m\]] \n\
    \`
    if [ \$? = 0 ]; then
        echo \[\e[1\;32m\];
    else
        echo \[\e[1\;31m\];
    fi
    \`\
        \u "'$(__git_ps1)'" $ \[\e[00m\]"

# sudoedit コマンドがなければ設定
SUDOEDIT_PATH=`which sudoedit`
[[ -z $SUDOEDIT_PATH ]] && alias sudoedit='sudo -e'

# - - - - -

# Mac時の設定
if [ `uname` = "Darwin" ]; then
    alias vi='vim'
    export PATH=$HOME/bin:/Applications/MacVim.app/Contents/bin:$HOME/Library/Python/2.7/bin:$HOME/usr/local/bin:/usr/local/sbin:/usr/local/bin:$PATH
    export SUDO_EDITOR='vim'

    alias pwgen12='pwgen -sy 12 1'
    alias pwgen32='pwgen -sy 32 1'

    alias ctags='/usr/local/Cellar/ctags/5.8_1/bin/ctags'

    if [ -f `brew --prefix`/etc/bash_completion ]; then
        . `brew --prefix`/etc/bash_completion
    fi

    [[ -e "${HOME}/.iterm2_shell_integration.bash" ]] && source "${HOME}/.iterm2_shell_integration.bash"
    
fi

# - - - - -
#
# General
#

alias ls='ls -F -G'
alias ll='ls -l'

# 
# git
#
[ -s "/usr/local/etc/bash_completion.d/git-completion.bash" ] && source /usr/local/etc/bash_completion.d/git-completion.bash
[ -s "/Library/Developer/CommandLineTools/usr/share/git-core/git-completion.bash" ] && source /Library/Developer/CommandLineTools/usr/share/git-core/git-completion.bash
[ -s "/usr/share/doc/git-1.8.3.1/contrib/completion/git-completion.bash" ] && source /usr/share/doc/git-1.8.3.1/contrib/completion/git-completion.bash

[ -s "/usr/local/etc/bash_completion.d/git-prompt.sh" ] && source /usr/local/etc/bash_completion.d/git-prompt.sh
[ -s "/Library/Developer/CommandLineTools/usr/share/git-core/git-prompt.sh" ] && source /Library/Developer/CommandLineTools/usr/share/git-core/git-prompt.sh
[ -s "/usr/share/git-core/contrib/completion/git-prompt.sh" ] && source /usr/share/git-core/contrib/completion/git-prompt.sh

[ -s "/Users/nakaharadaisuke/.scm_breeze/scm_breeze.sh" ] && source "/Users/nakaharadaisuke/.scm_breeze/scm_breeze.sh"

alias gitroot='cd `(git rev-parse --show-toplevel)`'

# Network- - - - -

# rsync
alias sudosync='rsync --rsync-path='\''sudo rsync'\'' -e '\''ssh -t'\'

# ssh-agent
eval `ssh-agent` > /dev/null 2>&1

# - - - - -


# Language Runtime - - - - -
#
# python
#
export PYTHONSTARTUP=~/.pythonrc
export PYTHONIOENCODING=UTF-8

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if which pyenv > /dev/null 2>&1; then eval "$(pyenv init -)"; fi
if which pipenv > /dev/null 2>&1; then eval "$(pipenv --completion)"; fi
[[ -s $HOME/npoi_dotfiles/fabric-completion.bash ]] && source $HOME/npoi_dotfiles/fabric-completion.bash

#
# golang
#
export GOPATH=$HOME/usr/local/

#
# Ruby
#
if which rbenv > /dev/null 2>&1; then eval "$(rbenv init -)"; fi
export PATH="$HOME/.rbenv/bin:$PATH"


# Infrastructure  - - - - -
#
# docker
#
alias dj='docker run -it --rm -p 8888:8888 -v $(pwd):/home/jovyan/work '$DOCKER_STACK_HASH
alias lman='docker run --rm -it man man'
alias d='docker'
alias db='docker build --squash=true -t'
alias de='docker exec -it nginx /bin/bash'
alias dr='docker rm -f nginx;docker run -d --name nginx -p 8080:80 -p 8443:443 ccport/nginx:2.0'

#
# kubernetes
# 
if which kubectl > /dev/null 2>&1; then eval "$(kubectl completion bash)"; fi
if which kompose > /dev/null 2>&1; then eval "$(kompose completion bash)"; fi
alias ku=kubectl

#
# direnv
#
if which direnv > /dev/null 2>&1; then eval "$(direnv hook bash)"; fi

# Cloud  - - - - -
#
# GCloud
#
# The next line updates PATH for the Google Cloud SDK.
if [ -f "$HOME/google-cloud-sdk/path.bash.inc" ]; then source "$HOME/google-cloud-sdk/path.bash.inc"; fi

# The next line enables shell command completion for gcloud.
if [ -f "$HOME/google-cloud-sdk/completion.bash.inc" ]; then source "$HOME/google-cloud-sdk/completion.bash.inc"; fi

#
# AWS
#
[[ -e "/Users/npoi/.pyenv/shims/aws_completer" ]] && complete -C '/Users/npoi/.pyenv/shims/aws_completer' aws
